[{"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\index.js":"1","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\App.js":"2","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\reportWebVitals.js":"3","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\store\\index.js":"4","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\index.js":"5","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\transactions\\DeleteSong_Transaction.js":"6","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\common\\jsTPS.js":"7","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\transactions\\EditSong_Transaction.js":"8","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\transactions\\MoveSong_Transaction.js":"9","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\transactions\\AddSong_Transaction.js":"10","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\api\\index.js":"11","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\Banner.js":"12","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\EditToolbar.js":"13","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\ListCard.js":"14","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\Statusbar.js":"15","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\ListSelector.js":"16","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\SongCard.js":"17","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\PlaylistCards.js":"18","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\EditSongModal.js":"19","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\DeleteSongModal.js":"20","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\DeleteModal.js":"21"},{"size":879,"mtime":1664910506892,"results":"22","hashOfConfig":"23"},{"size":624,"mtime":1664910506878,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1664910506893,"results":"25","hashOfConfig":"23"},{"size":24543,"mtime":1666032745220,"results":"26","hashOfConfig":"23"},{"size":560,"mtime":1664910506890,"results":"27","hashOfConfig":"23"},{"size":484,"mtime":1665718909528,"results":"28","hashOfConfig":"23"},{"size":6473,"mtime":1664910506881,"results":"29","hashOfConfig":"23"},{"size":741,"mtime":1665713347858,"results":"30","hashOfConfig":"23"},{"size":930,"mtime":1665725478648,"results":"31","hashOfConfig":"23"},{"size":365,"mtime":1665713330084,"results":"32","hashOfConfig":"23"},{"size":2373,"mtime":1665540795212,"results":"33","hashOfConfig":"23"},{"size":448,"mtime":1664910506883,"results":"34","hashOfConfig":"23"},{"size":2408,"mtime":1665725512318,"results":"35","hashOfConfig":"23"},{"size":3318,"mtime":1665598068229,"results":"36","hashOfConfig":"23"},{"size":468,"mtime":1664910506889,"results":"37","hashOfConfig":"23"},{"size":1581,"mtime":1665775292800,"results":"38","hashOfConfig":"23"},{"size":3120,"mtime":1665685263691,"results":"39","hashOfConfig":"23"},{"size":1241,"mtime":1666033156806,"results":"40","hashOfConfig":"23"},{"size":4635,"mtime":1665712974291,"results":"41","hashOfConfig":"23"},{"size":1850,"mtime":1665713783949,"results":"42","hashOfConfig":"23"},{"size":1740,"mtime":1665599046568,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"122d9ao",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\index.js",[],["91","92"],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\App.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\reportWebVitals.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\store\\index.js",["93","94","95","96"],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\index.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\transactions\\DeleteSong_Transaction.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\common\\jsTPS.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\transactions\\EditSong_Transaction.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\transactions\\MoveSong_Transaction.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\transactions\\AddSong_Transaction.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\api\\index.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\Banner.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\EditToolbar.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\ListCard.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\Statusbar.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\ListSelector.js",["97"],"import React, { useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport ListCard from './ListCard.js'\nimport { GlobalStoreContext } from '../store'\nimport DeleteModal from './DeleteModal'\n/*\n    This React component lists all the playlists in the UI.\n    \n    @author McKilla Gorilla\n*/\nconst ListSelector = () => {\n    const { store } = useContext(GlobalStoreContext);\n    store.history = useHistory();\n\n    useEffect(() => {\n        store.loadIdNamePairs();\n    }, []);\n\n    function handleCreateNewList() {\n        store.createNewList();\n    }\n    let editStatus = false;\n    if (store.listNameActive) {\n        editStatus = true;\n    }\n    let listCard = \"\";\n    if (store) {\n        listCard = store.idNamePairs.map((pair) => (\n            <ListCard\n                key={pair._id}\n                idNamePair={pair}\n                selected={false}\n            />\n        ))\n    }\n    return (\n        <div id=\"playlist-selector\">\n            <div id=\"list-selector-list\">\n                <div id=\"playlist-selector-heading\">\n                    <input\n                        type=\"button\"\n                        id=\"add-list-button\"\n                        disabled={editStatus}\n                        onClick={handleCreateNewList}\n                        className=\"playlister-button\"\n                        value=\"+\" />\n                    Your Lists\n                </div>                {\n                    listCard\n                }\n                <DeleteModal />\n            </div>\n        </div>)\n}\n\nexport default ListSelector;","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\SongCard.js",[],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\PlaylistCards.js",["98"],"C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\EditSongModal.js",["99"],"import React, { useContext, useEffect } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n/*\r\n    This modal is shown when the user asks to delete a list. Note \r\n    that before this is shown a list has to be marked for deletion,\r\n    which means its id has to be known so that we can retrieve its\r\n    information and display its name in this modal. If the user presses\r\n    confirm, it will be deleted.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction EditSongModal() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    let title = \"\"\r\n    let artist = \"\"\r\n    let id = \"\"\r\n    if (store.songToEdit) {\r\n        title = store.songToEdit.title\r\n        artist = store.songToEdit.artist\r\n        id = store.songToEdit.youTubeId\r\n    }\r\n\r\n    function handleEditSong(event) {\r\n        store.editSongTransaction();\r\n    }\r\n    function handleCloseModal(event) {\r\n        event.stopPropagation();\r\n        store.hideEditSongModal();\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"modal\"\r\n            id=\"edit-song-modal\"\r\n            data-animation=\"slideInOutLeft\">\r\n            <div className=\"modal-dialog\" id='verify-edit-song-root'>\r\n                <header className=\"modal-header\">\r\n                    Edit Song?\r\n                </header>\r\n                <div className=\"modal-center\">\r\n                    <div className=\"modal-center-content\">\r\n                        <div style={{ paddingBottom: '10px' }}>\r\n                            <label\r\n                                style={{ float: 'left', fontSize: '25pt', fontWeight: 'bold' }} //\"float: left; font-size: 25pt; font-weight: bold;\" \r\n                                htmlFor=\"Title\">Title:\r\n                            </label>\r\n                            <input\r\n                                style={{ fontSize: '15pt', margin: '0px', float: 'right' }}//\"font-size: 15pt; margin:0px; float: right;\"\r\n                                type='text'\r\n                                id=\"Title\"\r\n                                name=\"Title\"\r\n                                defaultValue={title}\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        <div style={{ paddingBottom: '10px' }}>\r\n                            <label\r\n                                style={{ float: 'left', fontSize: '25pt', fontWeight: 'bold' }} //\"float: left; font-size: 25pt; font-weight: bold;\" \r\n                                htmlFor=\"Artist\">\r\n                                Artist:\r\n                            </label>\r\n                            <input\r\n                                style={{ fontSize: '15pt', margin: '0px', float: 'right' }} //\"font-size: 15pt; margin:0px; float: right;\" \r\n                                type='text'\r\n                                id=\"Artist\"\r\n                                name=\"Artist\"\r\n                                defaultValue={artist}\r\n                            />\r\n                        </div >\r\n                        <br />\r\n                        <br />\r\n                        <div style={{ paddingBottom: '10px' }}>\r\n                            <label\r\n                                style={{ float: 'left', fontSize: '25pt', fontWeight: 'bold' }}//\"float: left; font-size: 25pt; font-weight: bold;\" \r\n                                htmlFor=\"Id\">\r\n                                YoutubeId:\r\n                            </label>\r\n                            <input\r\n                                style={{ fontSize: '15pt', margin: '0px', float: 'right' }} //\"font-size: 15pt; margin:0px; float: right;\" \r\n                                type='text'\r\n                                id=\"Id\"\r\n                                name=\"Id\"\r\n                                defaultValue={id}\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n                <div id=\"confirm-cancel-container\">\r\n                    <button\r\n                        style={{ marginRight: '50px' }}\r\n                        id=\"dialog-yes-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleEditSong}\r\n                    >Confirm</button>\r\n                    <button\r\n                        id=\"dialog-no-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleCloseModal}\r\n                    >Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditSongModal;","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\DeleteSongModal.js",["100"],"import React, { useContext, useEffect } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n/*\r\n    This modal is shown when the user asks to delete a list. Note \r\n    that before this is shown a list has to be marked for deletion,\r\n    which means its id has to be known so that we can retrieve its\r\n    information and display its name in this modal. If the user presses\r\n    confirm, it will be deleted.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction DeleteSongModal() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    let title = \"\";\r\n\r\n    if (store.songToEdit) {\r\n        title = store.songToEdit.title; //this will be title\r\n    }\r\n\r\n    function handleDeleteSong(event) {\r\n        //store.deleteMarkedSong();\r\n        store.deleteSongTransaction();\r\n    }\r\n\r\n    function handleCloseModal(event) {\r\n        store.hideDeleteSongModal();\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"modal\"\r\n            id=\"delete-song-modal\"\r\n            data-animation=\"slideInOutLeft\">\r\n            <div className=\"modal-dialog\">\r\n                <header className=\"modal-header\">\r\n                    Are you sure you want to delete {title}?\r\n                </header>\r\n                <div id=\"confirm-cancel-container\">\r\n                    <button\r\n                        style={{ marginRight: '50px' }}\r\n                        id=\"dialog-yes-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleDeleteSong}\r\n                    >Confirm</button>\r\n                    <button\r\n                        id=\"dialog-no-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleCloseModal}\r\n                    >Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteSongModal;","C:\\Users\\nross\\Desktop\\Playlister_HW3wNode\\Playlister_HW3\\client\\src\\components\\DeleteModal.js",["101"],"import React, { useContext, useEffect } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n/*\r\n    This modal is shown when the user asks to delete a list. Note \r\n    that before this is shown a list has to be marked for deletion,\r\n    which means its id has to be known so that we can retrieve its\r\n    information and display its name in this modal. If the user presses\r\n    confirm, it will be deleted.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction DeleteModal() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    let name = \"\";\r\n\r\n    if (store.nameOfDeletedList) {\r\n        name = store.nameOfDeletedList;\r\n    }\r\n\r\n    function handleDeleteList(event) {\r\n        store.deleteMarkedList();\r\n    }\r\n    function handleCloseModal(event) {\r\n        store.hideDeleteListModal();\r\n    }\r\n    return (\r\n        <div\r\n            className=\"modal\"\r\n            id=\"delete-modal\"\r\n            data-animation=\"slideInOutLeft\">\r\n            <div className=\"modal-dialog\">\r\n                <header className=\"dialog-header\">\r\n                    Are you sure you want to permanently delete {name} playlist?\r\n                </header>\r\n                <div id=\"confirm-cancel-container\">\r\n                    <button\r\n                        id=\"dialog-yes-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleDeleteList}\r\n                    >Confirm</button>\r\n                    <button\r\n                        id=\"dialog-no-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleCloseModal}\r\n                    >Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteModal;",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":25,"nodeType":"108","messageId":"109","endLine":1,"endColumn":35},{"ruleId":"106","severity":1,"message":"110","line":70,"column":9,"nodeType":"108","messageId":"109","endLine":70,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":199,"column":13,"nodeType":"113","messageId":"114","endLine":203,"endColumn":14},{"ruleId":"106","severity":1,"message":"115","line":475,"column":17,"nodeType":"108","messageId":"109","endLine":475,"endColumn":21},{"ruleId":"116","severity":1,"message":"117","line":17,"column":8,"nodeType":"118","endLine":17,"endColumn":10,"suggestions":"119"},{"ruleId":"106","severity":1,"message":"120","line":7,"column":10,"nodeType":"108","messageId":"109","endLine":7,"endColumn":18},{"ruleId":"106","severity":1,"message":"121","line":1,"column":29,"nodeType":"108","messageId":"109","endLine":1,"endColumn":38},{"ruleId":"106","severity":1,"message":"121","line":1,"column":29,"nodeType":"108","messageId":"109","endLine":1,"endColumn":38},{"ruleId":"106","severity":1,"message":"121","line":1,"column":29,"nodeType":"108","messageId":"109","endLine":1,"endColumn":38},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'StrictMode' is defined but never used.","Identifier","unusedVar","'lastList' is assigned a value but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'song' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["124"],"'KeyPress' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [store]",{"range":"127","text":"128"},[501,503],"[store]"]