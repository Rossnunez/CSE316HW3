{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nross\\\\Desktop\\\\Playlister_HW3\\\\Playlister_HW3\\\\client\\\\src\\\\components\\\\DeleteModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { GlobalStoreContext } from '../store';\n/*\r\n    This modal is shown when the user asks to delete a list. Note \r\n    that before this is shown a list has to be marked for deletion,\r\n    which means its id has to be known so that we can retrieve its\r\n    information and display its name in this modal. If the user presses\r\n    confirm, it will be deleted.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeleteModal() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  let name = \"testing\";\n\n  if (store.nameOfDeletedList) {\n    name = store.nameOfDeletedList; //console.log(name);\n  }\n\n  function handleDeleteList(event) {\n    store.deleteMarkedList();\n  }\n\n  function handleCloseModal(event) {\n    store.hideDeleteListModal();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    id: \"delete-modal\",\n    \"data-animation\": \"slideInOutLeft\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"dialog-header\",\n        children: [\"Are you sure you want to permanently delete \", name, \" playlist?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"confirm-cancel-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"dialog-yes-button\",\n          className: \"modal-button\",\n          onClick: handleDeleteList,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"dialog-no-button\",\n          className: \"modal-button\",\n          onClick: handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeleteModal, \"73C7T2gc7osE0gOE4ApLm9/B7dk=\");\n\n_c = DeleteModal;\nexport default DeleteModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"names":["React","useContext","useEffect","GlobalStoreContext","DeleteModal","store","name","nameOfDeletedList","handleDeleteList","event","deleteMarkedList","handleCloseModal","hideDeleteListModal"],"sources":["C:/Users/nross/Desktop/Playlister_HW3/Playlister_HW3/client/src/components/DeleteModal.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n/*\r\n    This modal is shown when the user asks to delete a list. Note \r\n    that before this is shown a list has to be marked for deletion,\r\n    which means its id has to be known so that we can retrieve its\r\n    information and display its name in this modal. If the user presses\r\n    confirm, it will be deleted.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction DeleteModal() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    let name = \"testing\";\r\n\r\n    if (store.nameOfDeletedList) {\r\n        name = store.nameOfDeletedList;\r\n        //console.log(name);\r\n    }\r\n \r\n\r\n    function handleDeleteList(event) {\r\n        store.deleteMarkedList();\r\n    }\r\n    function handleCloseModal(event) {\r\n        store.hideDeleteListModal();\r\n    }\r\n    return (\r\n        <div\r\n            className=\"modal\"\r\n            id=\"delete-modal\"\r\n            data-animation=\"slideInOutLeft\">\r\n            <div className=\"modal-dialog\">\r\n                <header className=\"dialog-header\">\r\n                    Are you sure you want to permanently delete {name} playlist?\r\n                </header>\r\n                <div id=\"confirm-cancel-container\">\r\n                    <button\r\n                        id=\"dialog-yes-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleDeleteList}\r\n                    >Confirm</button>\r\n                    <button\r\n                        id=\"dialog-no-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleCloseModal}\r\n                    >Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteModal;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,WAAT,GAAuB;EAAA;;EACnB,MAAM;IAAEC;EAAF,IAAYJ,UAAU,CAACE,kBAAD,CAA5B;EACA,IAAIG,IAAI,GAAG,SAAX;;EAEA,IAAID,KAAK,CAACE,iBAAV,EAA6B;IACzBD,IAAI,GAAGD,KAAK,CAACE,iBAAb,CADyB,CAEzB;EACH;;EAGD,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;IAC7BJ,KAAK,CAACK,gBAAN;EACH;;EACD,SAASC,gBAAT,CAA0BF,KAA1B,EAAiC;IAC7BJ,KAAK,CAACO,mBAAN;EACH;;EACD,oBACI;IACI,SAAS,EAAC,OADd;IAEI,EAAE,EAAC,cAFP;IAGI,kBAAe,gBAHnB;IAAA,uBAII;MAAK,SAAS,EAAC,cAAf;MAAA,wBACI;QAAQ,SAAS,EAAC,eAAlB;QAAA,2DACiDN,IADjD;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAK,EAAE,EAAC,0BAAR;QAAA,wBACI;UACI,EAAE,EAAC,mBADP;UAEI,SAAS,EAAC,cAFd;UAGI,OAAO,EAAEE,gBAHb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAMI;UACI,EAAE,EAAC,kBADP;UAEI,SAAS,EAAC,cAFd;UAGI,OAAO,EAAEG,gBAHb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAJJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAwBH;;GAxCQP,W;;KAAAA,W;AA0CT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}